Перем Маршрутизатор;
Перем Кластер;
Перем ИнформационнаяБаза;
Перем Пользователь;
Перем Пароль;

Процедура ПриСозданииОбъекта(Знач пМаршрутизатор, Знач пКластер, Знач пИнформационнаяБаза)
	
	Маршрутизатор = пМаршрутизатор;
	Кластер = пКластер;
	ИнформационнаяБаза = пИнформационнаяБаза;

	УстановитьАвторизациюИзСессии(Маршрутизатор);
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция УстановитьАдминистратораИБ(Знач пПользователь, Знач пПароль) Экспорт

	Пользователь = ?(пПользователь = Неопределено, "", пПользователь);
	Пароль = ?(пПароль = Неопределено, "", пПароль);
	ИнформационнаяБаза.УстановитьАдминистратора(Пользователь, Пароль);	
	Маршрутизатор.Сессия.УстановитьСтроку(ПолучитьИмяПеременнойСессии("Login"), Пользователь);
	Маршрутизатор.Сессия.УстановитьСтроку(ПолучитьИмяПеременнойСессии("Password"), Пароль);

КонецФункции

Функция УстановитьАвторизациюИзСессии(Знач пМаршрутизатор) Экспорт

	УстановитьАдминистратораИБ(
		пМаршрутизатор.Сессия.ПолучитьСтроку(ПолучитьИмяПеременнойСессии("Login")),
		пМаршрутизатор.Сессия.ПолучитьСтроку(ПолучитьИмяПеременнойСессии("Password"))
	);

КонецФункции

Функция АвторизацияПройдена(ТекстОшибкиАвторизации = "") Экспорт

	Результат = Ложь;
	ОписаниеОшибки = "";
	Попытка
		ПроверкаКоличестваСеансов = ИнформационнаяБаза.Сеансы().Количество();
		Результат = Истина;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;

	Если Не Результат Тогда
		ТекстОшибкиАвторизации = ОписаниеОшибки;
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

Функция ПолучитьИмяПеременнойСессии(ИмяПеременной)
	Возврат ИнформационнаяБаза.Ид() + "_" + ИмяПеременной;
КонецФункции