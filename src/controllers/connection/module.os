
Функция Index() Экспорт
	
	ОбщегоНазначения.УстановитьЗаголовокСтраницы(ЭтотОбъект, "Соединения");
	
	Кластер = ОбщегоНазначения.ПолучитьКластерПоИД(ЭтотОбъект);
	ИнформационнаяБаза_Идентификатор = ОбщегоНазначения.ПолучитьИдентификаторИнформационнойБазыИзПараметровЗапроса(ЭтотОбъект);

	ПараметрыМодели = Новый Структура;
	ПараметрыМодели.Вставить("Кластер_Идентификатор", ?(Кластер = Неопределено, "", Кластер.Ид()));
	ПараметрыМодели.Вставить("ИнформационнаяБаза_Идентификатор", ?(ИнформационнаяБаза_Идентификатор = Неопределено, "", ИнформационнаяБаза_Идентификатор));
	ПараметрыМодели.Вставить("СписокИнформационныхБаз", ОбщегоНазначения.ПолучитьСписокИнформационныхБазПоКластеру(ЭтотОбъект, Кластер));
	ПараметрыМодели.Вставить("МодельДанных", ПолучитьМодельСписка());
	
	Возврат Представление("index", ПараметрыМодели);
	
КонецФункции

Функция GetModelDataList() Экспорт
	ПолучитьТолькоСтруктуру = ОбщегоНазначения.ПолучитьЗначениеПараметраЗапроса(ЭтотОбъект, "empty") <> Неопределено;
	Возврат Содержимое(ПолучитьДанныеДляСписка(ЭтотОбъект, ПолучитьТолькоСтруктуру));
КонецФункции

Функция ПолучитьДанныеДляСписка(Роутер, ТолькоСтруктура)
	
	МодельДанных = ПолучитьМодельСписка();
	Если ТолькоСтруктура Тогда
		СписокСеансов = Новый Массив;
	Иначе
		БазаИД = ОбщегоНазначения.ПолучитьЗначениеПараметраЗапроса(ЭтотОбъект, "db");
		Кластер = ОбщегоНазначения.ПолучитьКластерПоИД(Роутер);
		ИнформационнаяБаза = ОбщегоНазначения.ПолучитьИнформационнуюБазуПоИд(Роутер, БазаИД, Кластер);
		АвторизацияБазы = Новый АвторизацияИБ(ЭтотОбъект, Кластер, ИнформационнаяБаза);
		СписокДанных = ОбщегоНазначения.ПолучитьСписокСоединенийИБ(ИнформационнаяБаза);
	КонецЕсли;
	
	Структура = Новый Структура;
	Структура.Вставить("header", Новый Массив);
	Если Не ТолькоСтруктура Тогда
		Структура.Вставить("data", Новый Массив);
	КонецЕсли;
	
	Для Каждого Колонка Из МодельДанных.Колонки Цикл
		Колонка = Новый Структура("name, title, sortable", Колонка , Колонка, true);
		Структура.header.Добавить(Колонка);
	КонецЦикла;

	Если Не ТолькоСтруктура Тогда
		Для Каждого ЭлементДанных Из СписокДанных Цикл
			СтрокаДанных = Новый Массив;
			Для Каждого Колонка Из МодельДанных.Колонки Цикл
				СтрокаДанных.Добавить(ЭлементДанных.Получить(Колонка));
			КонецЦикла;
			Структура.data.Добавить(СтрокаДанных);
		КонецЦикла;
	КонецЕсли;
	
	ПарсерJSON = Новый ПарсерJSON;
	ТелоЗапроса = ПарсерJSON.ЗаписатьJSON(Структура);
	
	Возврат ТелоЗапроса;
	
КонецФункции

Функция ПолучитьМодельСписка()

	МодельСписка = Новый ПредставлениеСписка;
	МодельСписка.Колонки.Добавить("Ид");
	МодельСписка.Колонки.Добавить("НомерСоединения");
	МодельСписка.Колонки.Добавить("Процесс_Ид");
	МодельСписка.Колонки.Добавить("Приложение");
	МодельСписка.Колонки.Добавить("НачалоРаботы");
	МодельСписка.Колонки.Добавить("НомерСеанса");
	МодельСписка.Колонки.Добавить("Заблокировано");

	Возврат МодельСписка;
КонецФункции