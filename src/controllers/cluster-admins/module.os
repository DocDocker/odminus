
#Использовать irac

Процедура СформироватьБоковуюПанель()

	Панель = БоковаяПанельНавигации.ОписаниеПанели();

	ПараметрыСсылки = Новый Структура;
	ПараметрыСсылки.Вставить("controller","clusters");
	БоковаяПанельНавигации.ДобавитьСсылку(Панель, АдресМаршрута("ПоАгенту", ПараметрыСсылки), "Кластеры серверов");
	БоковаяПанельНавигации.ДобавитьСсылку(Панель, АдресДействия("index"), "Администраторы");

	Панель[1].Активность = Истина;
	
	ДанныеПредставления["Sidebar"] = Панель;

КонецПроцедуры

Функция Index() Экспорт

	Идентификатор = ПолучитьИдентификатор();
	
	Элемент = ЦентральныеСерверы.ПолучитьЭлемент(Идентификатор);
	Если Элемент = Неопределено Тогда
		Возврат КодСостояния(404);
	КонецЕсли;

	СформироватьБоковуюПанель();

	Администрирование = ОбщегоНазначения.ПолучитьАдминистрированиеКластера(
			Элемент.СетевоеИмя,
			Элемент.Порт);

	АвторизоватьАдминистратора(Администрирование);

	Попытка
		МодельСписка = Новый ПредставлениеСписка;
		МодельСписка.Колонки.Добавить("name");
		МодельСписка.Колонки.Добавить("descr");
	
		МодельСписка.Данные = Администрирование.Администраторы().Список();
		МодельСписка.Заголовок = "Администраторы агента кластера";
		МодельСписка.ПолеИдентификатора = "name";

		Возврат Представление("objectList", МодельСписка);
	Исключение
		Если ЭтоОшибкаАвторизации(ОписаниеОшибки()) Тогда
			Возврат Перенаправление(АдресДействия("Login"));
		Иначе
			Возврат Представление("rasError", ОписаниеОшибки());
		КонецЕсли;
	КонецПопытки;

КонецФункции

Функция Login() Экспорт
	
	Идентификатор = ПолучитьИдентификатор();
	
	Если ЗапросHttp.Метод = "POST" Тогда
		Сессия.УстановитьСтроку("АдминАгента"+Идентификатор, ЗапросHttp.ДанныеФормы["userName"]);
		Сессия.УстановитьСтроку("ПарольАгента"+Идентификатор, ЗапросHttp.ДанныеФормы["password"]);
		Возврат Перенаправление(АдресДействия("Index"));
	Иначе
		СформироватьБоковуюПанель();
		МодельФормы = Новый Структура;
		МодельФормы.Вставить("Заголовок", "Авторизация на агенте");
		МодельФормы.Вставить("Действие", АдресДействия("Login"));
		Возврат Представление("loginForm", МодельФормы);
	КонецЕсли;

КонецФункции

Функция Add() Экспорт
	
	СформироватьБоковуюПанель();

	Если ЗапросHttp.Метод = "POST" Тогда
		// Сессия.УстановитьСтроку("АдминАгента"+Идентификатор, ЗапросHttp.ДанныеФормы["userName"]);
		// Сессия.УстановитьСтроку("ПарольАгента"+Идентификатор, ЗапросHttp.ДанныеФормы["password"]);
		// Возврат Перенаправление(АдресДействия("Index"));
	Иначе
		Возврат Представление("Item");
	КонецЕсли;

КонецФункции

Функция Edit() Экспорт
	
	Идентификатор = ПолучитьИдентификатор();
	
	Элемент = ЦентральныеСерверы.ПолучитьЭлемент(Идентификатор);
	Если Элемент = Неопределено Тогда
		Возврат КодСостояния(404);
	КонецЕсли;

	СформироватьБоковуюПанель();

	Администрирование = ОбщегоНазначения.ПолучитьАдминистрированиеКластера(
			Элемент.СетевоеИмя,
			Элемент.Порт);

	АвторизоватьАдминистратора(Администрирование);

	Если ЗапросHttp.Метод = "POST" Тогда
		// Сессия.УстановитьСтроку("АдминАгента"+Идентификатор, ЗапросHttp.ДанныеФормы["userName"]);
		// Сессия.УстановитьСтроку("ПарольАгента"+Идентификатор, ЗапросHttp.ДанныеФормы["password"]);
		// Возврат Перенаправление(АдресДействия("Index"));
	Иначе
		Возврат Представление("Item", Администрирование.Администраторы().Получить(Идентификатор));
	КонецЕсли;

КонецФункции

Функция ЭтоОшибкаАвторизации(Знач Описание)
	Возврат Найти(Описание, "Ошибка операции администрирования") > 0;
КонецФункции

Процедура АвторизоватьАдминистратора(Знач Администрирование)
	Если Сессия.Доступна Тогда
		Логин = Сессия.ПолучитьСтроку("АдминАгента"+Идентификатор);
		Пароль = Сессия.ПолучитьСтроку("ПарольАгента"+Идентификатор);
	Иначе
		Сообщить("Сессия недоступна", СтатусСообщения.Информация);
		Возврат;
	КонецЕсли;
	Если Логин <> Неопределено Тогда
		Администрирование.УстановитьАдминистратора(Логин, Пароль);
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьИдентификатор()

	Идентификатор = ЗначенияМаршрута["agent"];
	Возврат Идентификатор;

КонецФункции