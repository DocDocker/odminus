
#Использовать irac

Перем Лог;
Перем Администрирование;

Перем Авторизация;

Функция Авторизовать()

	Авторизация = Новый Авторизация(ЭтотОбъект, АдресДействия("Login"));

	Если Не Авторизация.ВключитьАдминистрирование() Тогда
		Возврат Ложь;
	КонецЕсли;
	Администрирование = Авторизация.АдминистрированиеКластера();
	АдминистрированиеАгента.УстановитьТекущегоАдминистратора(Авторизация,Сессия,Администрирование);

	Возврат Истина;

КонецФункции

Функция Index() Экспорт

	Если Не Авторизовать() Тогда
		Возврат КодСостояния(404);
	КонецЕсли;

	Попытка
		МодельСписка = Новый ПредставлениеСписка;
		МодельСписка.Колонки.Добавить("name");
		МодельСписка.Колонки.Добавить("descr");
	
		МодельСписка.Данные = Администрирование.Администраторы().Список();
		МодельСписка.Заголовок = "Администраторы агента кластера";
		МодельСписка.ПолеИдентификатора = "name";

		Возврат Представление("objectList", МодельСписка);
	Исключение
		Возврат Авторизация.ОбработкаОшибкиАвторизации(ОписаниеОшибки());
	КонецПопытки;

КонецФункции

Функция Login() Экспорт
	
	Авторизация = Новый Авторизация(ЭтотОбъект, АдресДействия("Login"));
	Идентификатор = Авторизация.ИдентификаторАгента();
	
	ПараметрыЗапроса = ЗапросHttp.ПараметрыЗапроса();
	Редирект = ПараметрыЗапроса["redirectUrl"];

	Если ЗапросHttp.Метод = "POST" Тогда
		Сессия.УстановитьСтроку("АдминАгента"+Идентификатор, ЗапросHttp.ДанныеФормы["userName"]);
		Сессия.УстановитьСтроку("ПарольАгента"+Идентификатор, ЗапросHttp.ДанныеФормы["password"]);

		Лог.Информация("Установлены параметры авторизации: АдминАгента%1=%2; ПарольАгента%1=%3",
			Идентификатор, Сессия.ПолучитьСтроку("АдминАгента"+Идентификатор), Сессия.ПолучитьСтроку("ПарольАгента"+Идентификатор));

		ПараметрыЗапроса = ЗапросHttp.ПараметрыЗапроса();
		Если Редирект <> Неопределено Тогда
			Лог.Информация("Перенаправляю на %1",Редирект);
			Возврат Перенаправление(Редирект);
		Иначе
			Возврат Перенаправление(АдресДействия("Index"));
		КонецЕсли;
	Иначе
		ПараметрыУрл = новый Структура;
		Если Редирект <> Неопределено Тогда
			ПараметрыУрл.Вставить("redirectUrl", Редирект);
		КонецЕсли;
		АдресРедиректа = АдресДействия("Login", ПараметрыУрл);
		МодельФормы = Новый Структура;
		МодельФормы.Вставить("Заголовок", "Авторизация на агенте");
		МодельФормы.Вставить("Действие", АдресРедиректа);
		Возврат Представление("loginForm", МодельФормы);
	КонецЕсли;

КонецФункции

Функция Add() Экспорт
	
	Если ЗапросHttp.Метод = "POST" Тогда

		ПоляФормы = ОбщегоНазначения.ПоляФормыВСтруктуру(ЗапросHttp.ДанныеФормы);
		Если Не ВалидироватьМодель(ПоляФормы) Тогда
			Возврат Представление("Item", ПоляФормы);
		КонецЕсли;

		Если Не Авторизовать() Тогда
			Возврат КодСостояния(404);
		КонецЕсли;

		Попытка
			ПараметрыАдминАгента = Новый Структура;
			ПараметрыАдминАгента.Вставить("Пароль", ПоляФормы.Пароль);
			ПараметрыАдминАгента.Вставить("Описание", ПоляФормы.Описание);
			
			Администрирование.Администраторы().Добавить(ПоляФормы.Имя, ПараметрыАдминАгента, Ложь);

			Возврат ПеренаправлениеНаДействие("Index");

		Исключение
			Возврат Авторизация.ОбработкаОшибкиАвторизации(ОписаниеОшибки());
		КонецПопытки;
		
	Иначе
		Возврат Представление("Item");
	КонецЕсли;

КонецФункции

Функция ВалидироватьМодель(Знач ПоляФормы)

	Если ПустаяСтрока(ПоляФормы.Имя) Тогда
		СостояниеМодели.ДобавитьОшибку("Имя", "Не заполнено имя");
	КонецЕсли;

	Если ПоляФормы.Пароль <> ПоляФормы.ПовторПароля Тогда
		СостояниеМодели.ДобавитьОшибку("Пароль", "Не совпадает пароль и подтверждение пароля");
	КонецЕсли;

	Возврат СостояниеМодели.Корректно;

КонецФункции

Функция Edit() Экспорт
	
	Если ЗапросHttp.Метод = "POST" Тогда
		
		Возврат Add();

	Иначе
		
		Если Не Авторизовать() Тогда
			Возврат КодСостояния(404);
		КонецЕсли;

		ИмяАдмина = ЗначенияМаршрута["id"];

		Попытка
			ДанныеПредставления["exists"] = Истина;
			Админ = Администрирование.Администраторы().Получить(ИмяАдмина);
			ПредставлениеАдмина = ОбщегоНазначения.ОбъектКластераВСтруктуру(Администрирование.Администраторы().ПараметрыОбъекта(), Админ);
			ПредставлениеАдмина.Вставить("ПовторПароля"); // для формы
			Возврат Представление("Item", ПредставлениеАдмина);
		Исключение
			Возврат Авторизация.ОбработкаОшибкиАвторизации(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;

КонецФункции

Функция Delete() Экспорт
	
	Если ЗапросHttp.Метод <> "POST" Тогда
		Возврат ПеренаправлениеНаДействие("Index");
	КонецЕсли;

	Если Не Авторизовать() Тогда
		Возврат КодСостояния(404);
	КонецЕсли;

	ИмяАдмина = ЗначенияМаршрута["id"];

	Попытка
		ДанныеПредставления["exists"] = Истина;
		Администрирование.Администраторы().Удалить(ИмяАдмина);
		Идентификатор = Авторизация.ИдентификаторАгента();
		Сессия.Удалить("АдминАгента"+Идентификатор);
		Сессия.Удалить("ПарольАгента"+Идентификатор);

		Возврат ПеренаправлениеНаДействие("Index");
	Исключение
		Возврат Авторизация.ОбработкаОшибкиАвторизации(ОписаниеОшибки());
	КонецПопытки;

КонецФункции

Лог = Логирование.ПолучитьЛог("osweb.odminus.agent-admins");