
#Использовать irac

Перем Лог;

Функция Index() Экспорт

	Идентификатор = ПолучитьИдентификатор();
	
	Элемент = ЦентральныеСерверы.ПолучитьЭлемент(Идентификатор);
	Если Элемент = Неопределено Тогда
		Возврат КодСостояния(404);
	КонецЕсли;

	Администрирование = ОбщегоНазначения.ПолучитьАдминистрированиеКластера(
			Элемент.СетевоеИмя,
			Элемент.Порт);

	АвторизоватьАдминистратора(Администрирование, Идентификатор);

	Попытка
		МодельСписка = Новый ПредставлениеСписка;
		МодельСписка.Колонки.Добавить("name");
		МодельСписка.Колонки.Добавить("descr");
	
		МодельСписка.Данные = Администрирование.Администраторы().Список();
		МодельСписка.Заголовок = "Администраторы агента кластера";
		МодельСписка.ПолеИдентификатора = "name";

		Возврат Представление("objectList", МодельСписка);
	Исключение
		Сообщить(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()), СтатусСообщения.Внимание);
		Если ЭтоОшибкаАвторизации(ОписаниеОшибки()) Тогда
			Возврат Перенаправление(АдресДействия("Login")+"?redirectUrl="+ЗапросHttp.Путь);
		Иначе
			Возврат Представление("rasError", ОписаниеОшибки());
		КонецЕсли;
	КонецПопытки;

КонецФункции

Функция Login() Экспорт
	
	Идентификатор = ПолучитьИдентификатор();
	
	Если ЗапросHttp.Метод = "POST" Тогда
		Сессия.УстановитьСтроку("АдминАгента"+Идентификатор, ЗапросHttp.ДанныеФормы["userName"]);
		Сессия.УстановитьСтроку("ПарольАгента"+Идентификатор, ЗапросHttp.ДанныеФормы["password"]);

		Лог.Информация("Установлены параметры авторизации: АдминАгента%1=%2; ПарольАгента%1=%3",
			Идентификатор, Сессия.ПолучитьСтроку("АдминАгента"+Идентификатор), Сессия.ПолучитьСтроку("ПарольАгента"+Идентификатор));

		ПараметрыЗапроса = ЗапросHttp.ПараметрыЗапроса();
		Если ПараметрыЗапроса["redirectUrl"] <> Неопределено Тогда
			Возврат Перенаправление(ПараметрыЗапроса["redirectUrl"]);
		Иначе
			Возврат Перенаправление(АдресДействия("Index"));
		КонецЕсли;
	Иначе
		МодельФормы = Новый Структура;
		МодельФормы.Вставить("Заголовок", "Авторизация на агенте");
		МодельФормы.Вставить("Действие", АдресДействия("Login"));
		Возврат Представление("loginForm", МодельФормы);
	КонецЕсли;

КонецФункции

Функция Add() Экспорт
	
	Если ЗапросHttp.Метод = "POST" Тогда

		ПоляФормы = ОбщегоНазначения.ПоляФормыВСтруктуру(ЗапросHttp.ДанныеФормы);
		Если Не ВалидироватьМодель(ПоляФормы) Тогда
			Возврат Представление("Item", ПоляФормы);
		КонецЕсли;

		Идентификатор = ПолучитьИдентификатор();
	
		Элемент = ЦентральныеСерверы.ПолучитьЭлемент(Идентификатор);
		Если Элемент = Неопределено Тогда
			Возврат КодСостояния(404);
		КонецЕсли;

		Администрирование = ОбщегоНазначения.ПолучитьАдминистрированиеКластера(
				Элемент.СетевоеИмя,
				Элемент.Порт);

		АвторизоватьАдминистратора(Администрирование, Идентификатор);

		Попытка
			ПараметрыАдминАгента = Новый Структура;
			ПараметрыАдминАгента.Вставить("Пароль", ПоляФормы.Пароль);
			ПараметрыАдминАгента.Вставить("Описание", ПоляФормы.Описание);
			
			Администрирование.Администраторы().Добавить(ПоляФормы.Имя, ПараметрыАдминАгента, Ложь);

			Возврат ПеренаправлениеНаДействие("Index");

		Исключение
			Если ЭтоОшибкаАвторизации(ОписаниеОшибки()) Тогда
				Возврат Перенаправление(АдресДействия("Login")+"?redirectUrl="+ЗапросHttp.Путь);
			Иначе
				Возврат Представление("rasError", ОписаниеОшибки());
			КонецЕсли;
		КонецПопытки;
		
	Иначе
		Возврат ПеренаправлениеНаДействие("Item");
	КонецЕсли;

КонецФункции

Функция ВалидироватьМодель(Знач ПоляФормы)

	Если ПустаяСтрока(ПоляФормы.Имя) Тогда
		СостояниеМодели.ДобавитьОшибку("Имя", "Не заполнено имя");
	КонецЕсли;

	Если ПоляФормы.Пароль <> ПоляФормы.ПовторПароля Тогда
		СостояниеМодели.ДобавитьОшибку("Пароль", "Не совпадает пароль и подтверждение пароля");
	КонецЕсли;

	Возврат СостояниеМодели.Корректно;

КонецФункции

Функция Edit() Экспорт
	
	Если ЗапросHttp.Метод = "POST" Тогда
		
		Возврат Add();

	Иначе
		
		Идентификатор = ПолучитьИдентификатор();
	
		Элемент = ЦентральныеСерверы.ПолучитьЭлемент(Идентификатор);
		Если Элемент = Неопределено Тогда
			Возврат КодСостояния(404);
		КонецЕсли;

		Администрирование = ОбщегоНазначения.ПолучитьАдминистрированиеКластера(
				Элемент.СетевоеИмя,
				Элемент.Порт);

		АвторизоватьАдминистратора(Администрирование, Идентификатор);

		ИмяАдмина = ЗначенияМаршрута["id"];

		Попытка
			ДанныеПредставления["exists"] = Истина;
			Админ = Администрирование.Администраторы().Получить(ИмяАдмина);
			ПредставлениеАдмина = ОбщегоНазначения.ОбъектКластераВСтруктуру(Администрирование.Администраторы().ПараметрыОбъекта(), Админ);
			ПредставлениеАдмина.Вставить("ПовторПароля"); // для формы
			Возврат Представление("Item", ПредставлениеАдмина);
		Исключение
			Если ЭтоОшибкаАвторизации(ОписаниеОшибки()) Тогда
				Возврат Перенаправление(АдресДействия("Login")+"?redirectUrl="+ЗапросHttp.Путь);
			Иначе
				Возврат Представление("rasError", ОписаниеОшибки());
			КонецЕсли;
		КонецПопытки;
	КонецЕсли;

КонецФункции

Функция ЭтоОшибкаАвторизации(Знач Описание)
	Возврат Найти(Описание, "Ошибка операции администрирования") > 0;
КонецФункции

Процедура АвторизоватьАдминистратора(Знач Администрирование, Знач Идентификатор)
	Если Сессия.Доступна Тогда
		Логин = Сессия.ПолучитьСтроку("АдминАгента"+Идентификатор);
		Пароль = Сессия.ПолучитьСтроку("ПарольАгента"+Идентификатор);
	Иначе
		Сообщить("Сессия недоступна", СтатусСообщения.Информация);
		Возврат;
	КонецЕсли;
	Если Логин <> Неопределено Тогда
		Лог.Информация("Установка авторизации:" + Логин + ":" + Пароль);
		Администрирование.УстановитьАдминистратора(Логин, Пароль);
	Иначе
		Лог.Информация("В сессии не сохранено авторизации: %1=%2; %1=%3",
			Идентификатор, Сессия.ПолучитьСтроку("АдминАгента"+Идентификатор), Сессия.ПолучитьСтроку("ПарольАгента"+Идентификатор));
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьИдентификатор()

	Идентификатор = ЗначенияМаршрута["agent"];
	Возврат Идентификатор;

КонецФункции

Лог = Логирование.ПолучитьЛог("osweb.odminus.agent-admins");