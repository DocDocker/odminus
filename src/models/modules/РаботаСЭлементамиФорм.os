
Функция ПолучитьДанныеИнформационнойБазыДляСписка(Контроллер, ИмяОбъекта, МодельДанных, ТолькоСтруктура) Экспорт
	
	Перем СписокДанных;

	Если ТолькоСтруктура Тогда
		СписокДанных = Новый Массив;
	Иначе
		БазаИД = ОбщегоНазначения.ПолучитьЗначениеПараметраЗапроса(Контроллер, "db");
		Кластер = ОбщегоНазначения.ПолучитьКластерПоИД(Контроллер);
		ИнформационнаяБаза = ОбщегоНазначения.ПолучитьИнформационнуюБазуПоИд(Контроллер, БазаИД, Кластер);
		АвторизацияБазы = Новый АвторизацияИБ(Контроллер, Кластер, ИнформационнаяБаза);
		Если ИмяОбъекта = "session" Тогда
			СписокДанных = ОбщегоНазначения.ПолучитьСписокСеансовИБ(ИнформационнаяБаза);
		ИначеЕсли ИмяОбъекта = "connection" Тогда
			СписокДанных = ОбщегоНазначения.ПолучитьСписокСоединенийИБ(ИнформационнаяБаза);	
		КонецЕсли;
	КонецЕсли;
	
	Структура = Новый Структура;
	Структура.Вставить("header", Новый Массив);
	Если Не ТолькоСтруктура Тогда
		Структура.Вставить("data", Новый Массив);
	КонецЕсли;
	
	Для Каждого Колонка Из МодельДанных.Колонки Цикл
		КолонкаДействий = Колонка = "Action"; 
		ИмяЗаголовка = ?(КолонкаДействий, "", Колонка);
		Сортировка = Не КолонкаДействий;
		Колонка = Новый Структура("name, title, sortable", Колонка , ИмяЗаголовка, Сортировка);
		Если КолонкаДействий Тогда
			Колонка.Вставить("size", "100");
		КонецЕсли;
		Структура.header.Добавить(Колонка);
	КонецЦикла;
	
	Если Не ТолькоСтруктура Тогда
		Для Каждого ЭлементДанных Из СписокДанных Цикл
			СтрокаДанных = Новый Массив;
			Для Каждого Колонка Из МодельДанных.Колонки Цикл
				Если Колонка = "Action" Тогда
					СтрокаДанных.Добавить("");	
					Продолжить;
				КонецЕсли;
				СтрокаДанных.Добавить(ЭлементДанных.Получить(Колонка));
			КонецЦикла;
			Структура.data.Добавить(СтрокаДанных);
		КонецЦикла;
	КонецЕсли;
	
	ПарсерJSON = Новый ПарсерJSON;
	ТелоЗапроса = ПарсерJSON.ЗаписатьJSON(Структура);	
	Возврат ТелоЗапроса;

КонецФункции