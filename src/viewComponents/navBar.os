#Использовать json

Функция ОбработкаВызова()
	
	ДеревоНавигации = ПолучитьДеревоНавигации();

	Ответ = Новый РезультатКомпонентаПредставление();
	Ответ.ДанныеПредставления = Новый СловарьДанныхПредставления();
	Ответ.ДанныеПредставления.Модель = ДеревоНавигации;

	Возврат Ответ;

КонецФункции

Функция ПолучитьДеревоНавигации()

	Перем АктивноеДерево;

	Если АктивноеДерево = Неопределено Тогда
		АктивноеДерево = БоковаяПанельНавигации.СформироватьНавигацию(ЭтотОбъект);
	КонецЕсли;

	Возврат АктивноеДерево;

КонецФункции

Функция ПрочитатьДеревоИзJson(АктивноеДеревоJson)
	
	Попытка
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(АктивноеДеревоJson);

		Дерево = БоковаяПанельНавигации.ОписаниеПанели();
		НаполнитьКоллекциюСтрок(Дерево.Строки, Чтение);

		Возврат Дерево;
	Исключение
		Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
		Возврат Неопределено;
	КонецПопытки;

КонецФункции

Процедура Прочитать(Чтение)
	Чтение.Прочитать();
КонецПроцедуры

Процедура НаполнитьКоллекциюСтрок(Коллекция, Чтение)

	Пока Истина Цикл
		Прочитать(Чтение);
		Если Чтение.ТипТекущегоЗначения = ТипЗначенияJson.КонецМассива Тогда
			Прочитать(Чтение);
			Прервать;
		КонецЕсли;
		
		Пока Чтение.ТипТекущегоЗначения <> ТипЗначенияJson.КонецОбъекта Цикл
			Прочитать(Чтение);
			Строка = Коллекция.Добавить();
			ИмяСвойства = Чтение.ТекущееЗначение;
			Сообщить("Имя свойства: " + ИмяСвойства);
			Если ИмяСвойства <> "children" Тогда
				Прочитать(Чтение);
				Строка[ИмяСвойства] = Чтение.ТекущееЗначение;
			Иначе
				Прочитать(Чтение);
				НаполнитьКоллекциюСтрок(Строка.Строки, Чтение);
			КонецЕсли;				
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры